generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  posts Post[]
}

model Post {
  id       Int  @id @default(autoincrement())
  author   User @relation(fields: [authorId], references: [id])
  authorId Int // relation scalar field  (used in the `@relation` attribute above)
}

// model User {
//   id              Int     @id @default(autoincrement())
//   email           String  @unique
//   role            Role    @default(USER)
//   username        String
//   password        String
//   Logs            Logs[]
//   submittedOrders Order[]
// }

// model Order {
//   id          Int        @id @default(autoincrement())
//   clientId    Int
//   client      User       @relation(fields: [clientId], references: [id])
//   description String?
//   gameBoard   GameBoard?
//   createdAt   DateTime   @default(now())
//   tasks       Task?
// }
//
// model Task {
//   id        Int      @id @default(autoincrement())
//   orderId   Int      @unique
//   order     Order    @relation(fields: [orderId], references: [id])
//   createdAt DateTime @default(now())
//   schemas   Schema?
// }
//
// model GameBoard {
//   id        Int      @id @default(autoincrement())
//   orderId   Int      @unique
//   order     Order    @relation(fields: [orderId], references: [id])
//   createdAt DateTime @default(now())
//   images    Image[]
// }
//
// model Image {
//   id          Int        @id @default(autoincrement())
//   base64      String
//   gameBoardId Int?
//   gameBoard   GameBoard? @relation(fields: [gameBoardId], references: [id])
//   elementId   Int?
//   element     Element?   @relation(fields: [elementId], references: [id])
// }
//
// model Schema {
//   id       Int       @id @default(autoincrement())
//   name     String
//   elements Element[]
//   taskId   Int       @unique
//   tasks    Task      @relation(fields: [taskId], references: [id])
// }
//
// model Element {
//   id         Int        @id @default(autoincrement())
//   name       String
//   priority   Priority
//   status     Status
//   amount     Int
//   schemaId   Int
//   schema     Schema     @relation(fields: [schemaId], references: [id])
//   properties Property[]
//   images     Image[]
// }
//
// model Property {
//   id        Int       @id @default(autoincrement())
//   name      String
//   value     Decimal[]
//   elementId Int
//   element   Element   @relation(fields: [elementId], references: [id])
// }
//
// enum Role {
//   USER
//   ADMIN
// }
//
// enum Priority {
//   LOW
//   MEDIUM
//   HIGH
// }
//
// enum Status {
//   TODO
//   IN_PROGRESS
//   BLOCKED
//   COMPLETED
// }
//
// model Logs {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   message   String
//   userId    Int
//   user      User     @relation(fields: [userId], references: [id])
// }
