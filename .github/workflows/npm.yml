name: npm CI

env:
  POSTGRESQL_DB: db

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend build test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5333:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install Dependencies
        working-directory: backend/
        run: npm install

      - name: Copy .env
        run: cp .env backend/.env

      - name: Run Tests
        working-directory: backend/
        run: npm test

  frontend:
    name: frontend build test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install Dependencies
        working-directory: frontend/
        run: npm install

      - name: Copy .env
        run: cp .env frontend/.env

      - name: Build frontend
        working-directory: frontend/
        run: npm run build --if-present